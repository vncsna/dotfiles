##############################################################################
# Based on the default template. Read `man 5 sway` for a reference

##############################################################################
# Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty
set $term_float alacritty \
  --title 'launcher'\
  --command

# Your preferred application launcher
# Note: pass the final command to swaymsg
# so that the resulting window can be opened
# on the original workspace that the command was run on
set $launcher dmenu_path | fzf | xargs swaymsg exec
set $menu $term_float zsh -c \'$launcher\'

# Random wallpaper from default ones
set $wallpapers $HOME/.config/sway/wallpapers
output * bg `find $wallpapers -type f | shuf -n 1` fill

##############################################################################
# Key bindings

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+e exec swaynag -t warning -m 'Do you really want to exit sway?' -b 'Yes, exit sway' 'swaymsg exit'

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# navigate between workspaces
bindsym $mod+Ctrl+Left workspace prev
bindsym $mod+Ctrl+Right workspace next

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Audio and brightness key bindings
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous
bindsym XF86MonBrightnessDown exec brightnessctl set 20%-
bindsym XF86MonBrightnessUp exec brightnessctl set +20%

##############################################################################
# Layout

# Gaps
gaps inner 2
smart_gaps on

# Border
default_border none

# Status bar
bar swaybar_command waybar

# Set floating mode for some windows
for_window [app_id="blueberry"] floating enable
for_window [title="^launcher$"] floating enable, border pixel
for_window [title="Firefox — Sharing Indicator"] floating enable

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

##############################################################################
# Resize mode

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

##############################################################################
# Shutdown mode

set $mode_shutdown "\
<span foreground='white'></span>  \
<span foreground='white'> \
<span foreground='white'>(<b>h</b>)</span>hibernate \
<span foreground='white'>(<b>l</b>)</span>lock \
<span foreground='white'>(<b>e</b>)</span>logout \
<span foreground='white'>(<b>r</b>)</span>reboot \
<span foreground='white'>(<b>u</b>)</span>suspend \
<span foreground='white'>(<b>s</b>)</span>shutdown \
</span>"

mode --pango_markup $mode_shutdown {
    bindsym l mode "default", exec swaylock -c 000000 # lock
    bindsym e exec loginctl terminate-user $USER # logout
    bindsym u mode "default", exec systemctl suspend # suspend
    bindsym h mode "default", exec systemctl hibernate # hibernate
    bindsym s exec systemctl poweroff # shutdown
    bindsym r exec systemctl reboot # reboot
    bindsym Escape mode "default" # return to default mode
}

# Bind the exit menu
bindsym $mod+Shift+e mode $mode_shutdown

##############################################################################
# Clipboard

exec wl-paste -t text --watch clipman store

##############################################################################
# Screenshot

bindsym Print exec /usr/share/sway/scripts/grimshot save area - | swappy -f -
bindsym Control+Print exec wf-recorder -g "$(slurp -d)" -f $HOME/Recordings/$(date -Is).mp4 -c h264_vaapi -d /dev/dri/renderD128 & notify-send "  Recording started"
bindsym Control+Shift+Print exec killall -s SIGINT wf-recorder& notify-send "  Recording stopped"

##############################################################################
# Scratchpad

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

##############################################################################
# Inputs. Use swaymsg -t get_inputs to find these

# Keyboard
input * {
  xkb_layout br
  xkb_model abnt2
  xkb_variant abnt2
}

# Mouse
mouse_warping none
input type:pointer {
    left_handed enabled
}

##############################################################################
# Outputs. Use swaymsg -t get_outputs to find these

# Set monitor position
output eDP-1 pos 0 0
output HDMI-A-1 pos 1920 0

# Set monitor temperature
exec wlsunset -T 4200 & disown

# Enable WebRTC screen sharing
exec {
    systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
    hash dbus-update-activation-environment 2>/dev/null && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
}

# Bind workspaces to outputs
workspace 1 output eDP-1
workspace 2 output eDP-1
workspace 3 output eDP-1
workspace 4 output eDP-1
workspace 5 output HDMI-A-1
workspace 6 output HDMI-A-1
workspace 7 output HDMI-A-1
workspace 8 output HDMI-A-1
workspace 9 output HDMI-A-1
workspace 10 output HDMI-A-1

###############################################################################
# Reference
# https://wiki.archlinux.org/title/PipeWire#WebRTC_screen_sharing
# https://github.com/systemd/systemd/blob/main/xorg/50-systemd-user.sh
# https://github.com/Alexays/Waybar/issues/1093#issuecomment-841846291
# https://github.com/Manjaro-Sway/desktop-settings/blob/sway/community/sway/etc/sway/config.d/99-autostart-applications.conf
